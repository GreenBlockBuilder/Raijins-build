{"version":3,"file":"static/js/262.7c3e7ae6.chunk.js","mappings":"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","sources":["components/ScrollButton/index.jsx","components/SectionTitle/index.jsx","components/Home/HomeContainer.jsx","components/Home/HeroContainer.jsx","components/Home/Hero.jsx","components/Home/ActiveRafflesContainer.jsx","components/Home/TopActiveRaffles.jsx","components/Home/ActiveRaffles.jsx","components/Home/ToFAQs.jsx","pages/Home/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport cx from \"classnames\";\r\nimport ScrollBtnImg from \"assets/images/common/Mousedown.gif\";\r\nimport \"./index.scss\";\r\n\r\nconst ScrollButton = () => {\r\n  const [scrollY, setScrollY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrollY(window.scrollY);\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={cx(\"scroll-btn\")}>\r\n      <div className={cx(\"img-container\")}>\r\n        <img src={ScrollBtnImg} alt=\"scroll-btn\" width=\"100%\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollButton;\r\n","import cx from \"classnames\";\r\nimport \"./index.scss\";\r\n\r\n// ================================================\r\n\r\nconst SectionTitle = ({ children, classes }) => {\r\n  return <h2 className={cx(\"section-title\", classes)}>{children}</h2>;\r\n};\r\n\r\nexport default SectionTitle;\r\n","import cx from \"classnames\";\r\n\r\n// ================================================\r\n\r\nconst HomeContainer = ({ children }) => {\r\n  return <div className={cx(\"home-container\")}>{children}</div>;\r\n};\r\n\r\nexport default HomeContainer;\r\n","import cx from \"classnames\";\r\n\r\n// ================================================\r\n\r\nconst HeroContainer = ({ children }) => {\r\n  return <div className={cx(\"hero-container\")}>{children}</div>;\r\n};\r\n\r\nexport default HeroContainer;\r\n","import cx from \"classnames\";\r\nimport { useMediaQuery } from \"@uidotdev/usehooks\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport Description from \"components/Description\";\r\nimport HeroContainer from \"./HeroContainer\";\r\nimport RoundButton from \"components/RoundButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ScrollButton from \"components/ScrollButton\";\r\n\r\n// ================================================\r\n\r\nconst Hero = () => {\r\n  const isMobile = useMediaQuery(\"only screen and (max-width: 640px)\");\r\n\r\n  const onActiveRafflesBtn = () => {\r\n    const dom = document.querySelector(\"#active-raffles\");\r\n    if (dom) {\r\n      dom.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeroContainer>\r\n      <PageTitle classes={cx(\"mb-8\")}>\r\n        The <span>Hel yard</span>\r\n      </PageTitle>\r\n      <div\r\n        className={cx(\r\n          \"description-section\",\r\n          isMobile ? \"w-80\" : \"w-30\",\r\n          \"mx-auto\"\r\n        )}\r\n      >\r\n        <Description classes={cx(\"text-center\", \"mb-3\")}>\r\n          The HEL Yard is a decentralized section of the Underworld managed by\r\n          the all powerful grim reaper, HEL.\r\n        </Description>\r\n        <Description classes={cx(\"text-center\", \"mx-auto\", \"mb-5\")}>\r\n          It's a place where you can stake your Raijins NFTs, earn Raijins Tickets and\r\n          try your luck at winning unique prizes.\r\n        </Description>\r\n        <Link to=\"/staking\">\r\n          <RoundButton\r\n            text=\"staking\"\r\n            variant=\"danger\"\r\n            classes=\"w-50 mx-auto d-block mb-2\"\r\n          />\r\n        </Link>\r\n        <RoundButton\r\n          text=\"active raffles\"\r\n          variant=\"primary\"\r\n          classes={`w-50 mx-auto d-block ${isMobile ? \"\" : \"mb-4\"}`}\r\n          onBtnClick={onActiveRafflesBtn}\r\n        />\r\n        {\r\n          isMobile ?\r\n            <></>\r\n            :\r\n            <div className=\"scroll-btn-wrapper\">\r\n              <ScrollButton />\r\n            </div>\r\n        }\r\n      </div>\r\n    </HeroContainer>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import cx from \"classnames\";\r\n\r\n// ================================================\r\n\r\nconst ActiveRafflesContainer = ({ children }) => {\r\n  return (\r\n    <div className={cx(\"active-raffles-container\")} id=\"active-raffles\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveRafflesContainer;\r\n","import cx from \"classnames\";\r\nimport RaffleCard from \"../RaffleCard\";\r\n\r\n// ================================================\r\n\r\nconst TopActiveRaffles = ({ activeRaffles, isWalletConnected }) => {\r\n  return (\r\n    <div className={cx(\"top-active-raffles-container\")}>\r\n      <h4 className={cx(\"top-active-raffles-title\", \"italic\", \"mb-3\")}>\r\n        <span>{activeRaffles.length} top</span> active raffles\r\n      </h4>\r\n      {activeRaffles && activeRaffles.length ? (\r\n        <div className={cx(\"cards-container\")}>\r\n          {activeRaffles.map((raffle) => (\r\n            <RaffleCard raffle={raffle} key={raffle.id} isTopRaffles=\"true\" isWalletConnected={isWalletConnected} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-raffles-container\">\r\n          <p className={cx(\"text-center\")}>No active raffles</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopActiveRaffles;\r\n","import ActiveRafflesContainer from \"./ActiveRafflesContainer\";\r\nimport SectionTitle from \"../SectionTitle\";\r\nimport Description from \"../Description\";\r\nimport TopActiveRaffles from \"./TopActiveRaffles\";\r\n\r\n// ================================================\r\n\r\nconst ActiveRaffles = ({ activeRaffles, isWalletConnected }) => {\r\n  return (\r\n    <ActiveRafflesContainer>\r\n      <SectionTitle classes=\"mb-3\">\r\n        active raffles in the <span>hel yard</span>\r\n      </SectionTitle>\r\n      <Description classes=\"text-center mb-4\">\r\n        Here are the top raffles currently active.\r\n        <br />\r\n        Try your luck and win prizes\r\n      </Description>\r\n      <TopActiveRaffles activeRaffles={activeRaffles} isWalletConnected={isWalletConnected} />\r\n    </ActiveRafflesContainer>\r\n  );\r\n};\r\n\r\nexport default ActiveRaffles;\r\n","import cx from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeftArrowCircle from \"assets/images/home/leftArrowCircle.png\";\r\n\r\n// ================================================\r\n\r\nconst ToFAQs = () => {\r\n  return (\r\n    <div className={cx(\"to-faqs\")}>\r\n      <Link\r\n        to=\"/about\"\r\n        className={cx(\"d-flex\", \"align-center\", \"gap-1\", \"justify-end\")}\r\n      >\r\n        faq <img src={LeftArrowCircle} alt=\"arrow\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToFAQs;\r\n","import { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Layout from \"components/Layout\";\r\nimport HomeContainer from \"components/Home/HomeContainer\";\r\nimport Hero from \"components/Home/Hero\";\r\nimport ActiveRaffles from \"components/Home/ActiveRaffles\";\r\nimport HorizontalDivider from \"components/HorizontalDivider\";\r\n\r\nimport { useChainId } from \"lib/chains\";\r\nimport RaijinsTicket from \"abis/RaijinsTicket.json\";\r\nimport RaffleRaijins from \"abis/RaffleRaijins.json\";\r\nimport { getContract } from \"config/contracts\";\r\nimport { Raijins_RAFFLES } from \"config/raffles\";\r\nimport { contractFetcher } from \"lib/contracts\";\r\n\r\nimport \"./index.scss\";\r\nimport ToFAQs from \"components/Home/ToFAQs\";\r\n\r\n// ================================================\r\nconst { AddressZero } = ethers.constants;\r\n\r\nconst loadActiveRaffles = (dataContract, period, waitingPeriod) => {\r\n  if (dataContract === undefined) return [];\r\n  if (dataContract.length === 0) return [];\r\n\r\n  if (period === undefined || period === 0) return [];\r\n  if (waitingPeriod === undefined || waitingPeriod === 0) return [];\r\n\r\n  const ret = dataContract.map((item, index) => {\r\n    if (item.isDisabled) return null;\r\n\r\n    const raffleInfo = Raijins_RAFFLES[index];\r\n    let winningRate1x = 1 / (parseInt(item.totalTicketCnt.toString()) + 1) * 100;\r\n\r\n    let winningRate = 0;\r\n    if (parseInt(item.totalTicketCnt.toString()) === 0\r\n     || parseInt(item.ticketCntForUser.toString()) === 0) \r\n      winningRate = 0;\r\n    else {\r\n      winningRate =\r\n        (parseInt(item.ticketCntForUser.toString()) / parseInt(item.totalTicketCnt.toString())) * 100;\r\n    }\r\n\r\n    let days = 0;\r\n    let hours = 0;\r\n    let minutes = 0;\r\n    const currentTime = new Date().getTime() / 1000;\r\n    const endTime =\r\n      parseInt(item.timeStarted.toString()) + parseInt(period.toString());\r\n\r\n    let isEnded = false;\r\n    if (currentTime >= endTime || item.isDecided)\r\n      isEnded = true;\r\n    else if (currentTime < endTime) {\r\n      const timeToEnd = endTime - currentTime;\r\n      days = Math.floor(timeToEnd / (60 * 60 * 24));\r\n      hours = Math.floor((timeToEnd % (60 * 60 * 24)) / (60 * 60));\r\n      minutes = Math.floor((timeToEnd % (60 * 60)) / 60);\r\n    }\r\n\r\n    let daysNext = 0;\r\n    let hoursNext = 0;\r\n    let minutesNext = 0;\r\n    if (item.isDecided) {\r\n      const nextRaffleTime = parseInt(item.timeDecided.toString()) + parseInt(waitingPeriod.toString());\r\n      const timeToNextRaffle = nextRaffleTime - currentTime;\r\n      if (currentTime < nextRaffleTime) {\r\n        daysNext = Math.floor(timeToNextRaffle / (60 * 60 * 24));\r\n        hoursNext = Math.floor((timeToNextRaffle % (60 * 60 * 24)) / (60 * 60));\r\n        minutesNext = Math.floor((timeToNextRaffle % (60 * 60)) / 60);\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: raffleInfo.id,\r\n      image: raffleInfo.image,\r\n      title: raffleInfo.title,\r\n      value: item.value,\r\n      winningRate1x: winningRate1x.toFixed(0),\r\n      winningRate: winningRate.toFixed(0),\r\n      winner: item.winner,\r\n      ended: isEnded,\r\n      decided: item.isDecided,\r\n      remainingTime: {\r\n        days: days,\r\n        hours: hours,\r\n        minutes: minutes,\r\n      },\r\n      remainingTimeNextRaffle: {\r\n        days: daysNext,\r\n        hours: hoursNext,\r\n        minutes: minutesNext,\r\n      }\r\n    };\r\n  });\r\n\r\n  const finalArray = ret.filter((item) => item !== null);\r\n  return finalArray;\r\n};\r\n\r\n// ================================================\r\n\r\nconst Home = () => {\r\n  const { active, library, account } = useWeb3React();\r\n  const { chainId } = useChainId();\r\n\r\n  const raffleAddress = getContract(chainId, \"RaffleRaijins\");\r\n\r\n  const { data: period } = useSWR(\r\n    true && raffleAddress && [true, chainId, raffleAddress, \"period\"],\r\n    { fetcher: contractFetcher(library, RaffleRaijins) }\r\n  );\r\n\r\n  const { data: waitingPeriod } = useSWR(\r\n    true && raffleAddress && [true, chainId, raffleAddress, \"waitingPeriod\"],\r\n    { fetcher: contractFetcher(library, RaffleRaijins) }\r\n  );\r\n\r\n  const { data: dataContract } = useSWR(\r\n    true &&\r\n    raffleAddress && [\r\n      true,\r\n      chainId,\r\n      raffleAddress,\r\n      \"getRaffleInfo\",\r\n      active ? account : AddressZero,\r\n    ],\r\n    { fetcher: contractFetcher(library, RaffleRaijins) }\r\n  );\r\n  const raffles = loadActiveRaffles(dataContract, period, waitingPeriod);\r\n  const activeRaffles = raffles.filter((item) => !item.ended);\r\n  const top5 = activeRaffles.slice(0, 5);\r\n  return (\r\n    <Layout>\r\n      <HomeContainer>\r\n        <Hero />\r\n        <ActiveRaffles activeRaffles={top5} isWalletConnected={active} />\r\n        <HorizontalDivider />\r\n        <ToFAQs />\r\n      </HomeContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","setScrollY","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","_jsx","className","cx","children","src","ScrollBtnImg","alt","width","_ref","classes","isMobile","useMediaQuery","_jsxs","HeroContainer","PageTitle","Description","Link","to","RoundButton","text","variant","concat","onBtnClick","dom","document","querySelector","scrollIntoView","behavior","_Fragment","ScrollButton","id","activeRaffles","isWalletConnected","length","map","raffle","RaffleCard","isTopRaffles","ActiveRafflesContainer","SectionTitle","TopActiveRaffles","AddressZero","ethers","loadActiveRaffles","dataContract","period","waitingPeriod","undefined","item","index","isDisabled","raffleInfo","Raijins_RAFFLES","winningRate1x","parseInt","totalTicketCnt","toString","winningRate","ticketCntForUser","days","hours","minutes","currentTime","Date","getTime","endTime","timeStarted","isEnded","isDecided","timeToEnd","Math","floor","daysNext","hoursNext","minutesNext","nextRaffleTime","timeDecided","timeToNextRaffle","image","title","value","toFixed","winner","ended","decided","remainingTime","remainingTimeNextRaffle","filter","_useWeb3React","useWeb3React","active","library","account","chainId","useChainId","raffleAddress","getContract","useSWR","fetcher","contractFetcher","RaffleRaijins","data","top5","slice","Layout","HomeContainer","Hero","ActiveRaffles","HorizontalDivider","ToFAQs"],"sourceRoot":""}